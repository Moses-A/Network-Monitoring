#!/usr/bin/env python2
# written by Moses Arocha

import optparse
from socket import *
from threading import *

ThreadingDisplayLimit = Semaphore(value=1)			# limits the display of the threading, so it is not all messy when displayed

def connScan(TargetHost, TargetPort):
   try:
	connSkt = socket(AF_INET, SOCK_STREAM)
	connSkt.connect((TargetHost, TargetPort))
	connSkt.send('KaliWithUbuntu\r\n')
	results = connSkt.recv(100)
	ThreadingDisplayLimit.acquire()
	print '\n\t[Success] %d/ TCP Port Open'% TargetPort
	print '\n\t[Success] ' + str(results)
   except:
	ThreadingDisplayLimit.acquire()
	print '\t\t[Failure] %d/ TCP Port Closed'% TargetPort
   finally:
	ThreadingDisplayLimit.release()
	connSkt.close()

def PortScanner(TargetHost, TargetPorts):
   try:
	TargetIP = gethostbyname(TargetHost)			# inclusion of a DNS that will grab the IP's of URL's
   except:
	print "\n\t[Failure] Cannot resolve '%s': Host Does Not Exist"%TargetHost
	return
   try:
	TargetName = gethostbyaddr(TargetIP)
	print '\n\t[Success] Scan Results for: ' + TargetName[0]
   except:
	print '\n\t[Success] Scan Results for: ' + TargetIP
   setdefaulttimeout(1)
   for TargetPort in TargetPorts:
	threading = Thread(target=connScan, args=(TargetHost, int(TargetPort)))
	threading.start()

#The beginning of the main function, the origins of the extensions (optparse) begins here
def main():
   extensions = optparse.OptionParser('usage%prog '+ '-H <target host> -P <target port>')
   extensions.add_option('-H', '--Host', dest = 'TargetHost', type='string', help = 'Please Write The Exact Host Targeted')
   extensions.add_option('-P', '--Port', dest = 'TargetPort', type='string', help = 'Please Write The Exact Ports, Only Seperated By Comma')
   (options,args) = extensions.parse_args()
   TargetHost = options.TargetHost
   TargetPorts = str(options.TargetPort).split(',')
   if (TargetHost == None) | (TargetPorts[0] == None):
	print extensions.usage
	exit(0)
   PortScanner(TargetHost, TargetPorts)

if __name__ == "__main__":
	main()
