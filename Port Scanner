#!/usr/bin/env python2
# written by Moses Arocha

import optparse
from socket import *
from threading import *

screenLock = Semaphore(value=1)

def connScan(TargetHost, TargetPort):
   try:
	connSkt = socket(AF_INET, SOCK_STREAM)
	connSkt.connect((TargetHost, TargetPort))
	connSkt.send('ViolentPython\r\n')
	results = connSkt.recv(100)
	screenLock.acquire()
	print '[+]%d/tcp open'% TargetPort
	print '[+] ' + str(results)
   except:
	screenLock.acquire()
	print '[-]%d/tcp closed'% TargetPort
   finally:
	screenLock.release()
	connSkt.close()

def portScan(TargetHost, TargetPorts):
   try:
	tgtIP = gethostbyname(TargetHost)
   except:
	print "[-] Cannot resolve '%s': Unknown host"%TargetHost
	return
   try:
	tgtName = gethostbyaddr(tgtIP)
	print '\n\t[+] Scan Results for: ' + tgtName[0]
   except:
	print '\n\t[+] Scan Results for: ' + tgtIP
   setdefaulttimeout(1)
   for TargetPort in TargetPorts:
	t = Thread(target=connScan, args=(TargetHost, int(TargetPort)))
	t.start()

def main():
   parser = optparse.OptionParser('usage%prog '+ '-H <target host> -P <target port>')
   parser.add_option('-H', '--Host', dest = 'TargetHost', type='string', help = 'specify target host')
   parser.add_option('-P', '--Port', dest = 'TargetPort', type='string', help = 'specify target port[s] separated by comma')
   (options,args) = parser.parse_args()
   TargetHost = options.TargetHost
   TargetPorts = str(options.TargetPort).split(',')
   if (TargetHost == None) | (TargetPorts[0] == None):
	print parser.usage
	exit(0)
   portScan(TargetHost, TargetPorts)

if __name__ == "__main__":
	main()
