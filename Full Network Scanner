#!/usr/bin/env python2
# -*- coding: utf-8 -*- 
# written by Moses Arocha

from __future__ import unicode_literals
import optparse
import socket
import os
import sys


def ProgramInstaller():
	os.system("sudo apt-get install nmap && sudo apt-get install tshark")
	
def FinPortScanner(TargetHost):
	OSD = os.system("sudo nmap -sF "+TargetHost+" >> NetworkScan.txt")

def ACKScan(TargetHost):
	OSD = os.system("sudo nmap -sA "+TargetHost+" >> NetworkScan.txt")

def FragmentedIP(TargetHost):
	OSD = os.system("sudo nmap -ff "+TargetHost+" >> NetworkScan.txt")
	
def OSScanner(TargetHost):
	OSD = os.system("sudo nmap -O "+TargetHost+" >> NetworkScan.txt")
	
def MacSpoof(TargetHost):
	OSD = os.system("sudo nmap -spoof-mac Cisco "+TargetHost+" >> NetworkScan.txt")

def WebServer(TargetHost):
	OSD = os.system("sudo nmap -sV -script=http-enum" +TargetHost+" >> NetworkScan.txt")

def SambaServer(TargetHost):
	OSD = os.system(" sudo nmap –script=samba-vuln-cve-2012-1182 -p139 "+TargetHost+" >> NetworkScan.txt")

def SMTPServer(TargetHost):
	OSD = os.system("sudo nmap -sV –script=smtp-strangeport "+TargetHost+ " >> NetworkScan.txt")

def PHPVersion(TargetHost):
	OSD = os.system("sudo nmap -sV –script=http-php-version "+TargetHost+" >> NetworkScan.txt")

def DNSBlackList(TargetHost):
	OSD = os.system("sudo nmap -sn "+TargetHost+" -script dns-blacklist >> NetworkScan.txt")

def HostPing(TargetHost):
	OSD = os.system("sudo nmap -sn "+TargetHost+" >> NetworkScan.txt")

def PortScan(TargetHost,TargetPort):
	OSD = os.system("sudo nmap -p "+TargetPort+" -sV -sS -T4 "+TargetHost+" >> NetworkScan.txt")	
	
def Options():
	print "nmap -sV -p 139,445 -oG grep-output.txt 10.0.1.0/24"
	print "nmap -sS -sV -T5 10.0.1.99 --webxml -oX - | xsltproc --output file.html -"

def NetBios(TargetHost):
	OSD = os.system("sudo nmap -sV -p 139,445 "+TargetHost+" >> NetworkScan.txt")
	User = raw_input(" Do You Want To Continue? [Y/N] ")
	if User == "Y" or User == "y":
		display = os.system("sudo nmap -sU --script nbstat.nse -p 137 "+TargetHost+" >> NetworkScan.txt")
		continuation = os.system("sudo nmap --script-args=unsafe=1 --script smb-check-vulns.nse -p 445 "+TargetHost+" >> NetworkScan.txt")
	else:
		print " Information has been outputed to a textfile."

def CheckHTTPServer(TargetHost):
	OSD = os.system("sudo nmap -p80,443 "+TargetHost+" -oG >> NetworkScan.txt")

def UDPScan(TargetHost,TargetPort):
	OSD = os.system("sudo nmap -p"+TargetPort+" "+TargetHost+" >> NetworkScan.txt")
	
def SCTPScan(TargetHost):
	OSD = os.system("sudo nmap -sY "+TargetHost+" >> NetworkScan.txt")

def AdvSCTPScan(TargetHost):
	OSD = os.system("sudo nmap -sZ "+TargetHost+" >> NetworkScan.txt")

def ZombieAttack(TargetHost,TargetPort):
	mask = raw_input(" What IP Do You Want To Mask Yourself As? ")
	OSD = os.system("sudo nmap -Pn -p"+TargetPort+" -sI "+mask+" "+TargetHost+" >> NetworkScan.txt")

def SpoofAddress(TargetHost):
	OSD = os.system("sudo nmap -S "+TargetHost+" >> NetworkScan.txt") 

def Organizer(TargetHost):
	print "\n\n\t Below Are The Tasks You Can Commense. Only Do If You Have Permissions! "
	choice = int(raw_input("\n\t\t What Is The First Thing You Would Like To Do?"))
	FinPortScanner(TargetHost),
	ACKScan(TargetHost),
	FragmentedIP(TargetHost),
	OSScanner(TargetHost),
	MacSpoof(TargetHost),
	SambaServer(TargetHost),
	SMTPServer(TargetHost),
	PHPVersion(TargetHost),
	DNSBlackList(TargetHost),
	HostPing(TargetHost),
	Options(),
	NetBios(TargetHost),
	CheckHTTPServer(TargetHost),
	SCTPScan(TargetHost),
	AdvSCTPScant(TargetHost),
	SpoofAddress(TargetHost)

def main():
	extensions = optparse.OptionParser('usage%prog -H <Target Host> -P <Target Port>')
	extensions.add_option('-H', '--Host', dest='TargetHost', type='string', help='specify target host')
	extensions.add_option('-P', '--Port', dest='TargetPort', type='string', help='specify target port')
	(options, args) = extensions.parse_args()
	TargetHost = options.TargetHost
	TargetPorts = str(options.TargetPort).split(',')
	if (TargetHost == None) | (TargetPorts[0] == None):
		print extensions.usage
		exit(0)
	if not os.geteuid() == 0:
    		sys.exit('Must Be Root!')
	f = open('NetworkScan.txt', 'w')
	ProgramInstaller()
	Organizer(TargetHost)
	for TargetPort in TargetPorts:
		PortScan(TargetHost, TargetPort)
		UDPScan(TargetHost, TargetPort)
		ZombieAttack(TargetHost, TargetPort)		

if __name__ == '__main__':
	main()
